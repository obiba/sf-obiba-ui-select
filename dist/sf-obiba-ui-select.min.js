angular.module("sfObibaUiSelectTemplates",[]).run(["$templateCache",function(e){e.put("src/templates/sf-obiba-ui-select.html",'<div ng-controller="sfObibaUiSelectController" schema-validate="form" sf-field-model>\n  <form-ui-select title="form.title"\n                  show-title="!form.notitle"\n                  items="form.items"\n                  auto-complete="form.autoComplete"\n                  sf-field-model="replaceAll"\n                  model="$$value$$"\n                  multiple="form.multiple"\n                  description="form.description"></form-ui-select>\n</div>\n')}]),angular.module("sfObibaUiSelect",["schemaForm","ui.select","ngObiba","sfObibaUiSelectTemplates"]).config(["schemaFormProvider","schemaFormDecoratorsProvider","sfBuilderProvider","sfPathProvider",function(e,t,o,l){var i=function(t,o,i){if("array"===o.type&&"obibaUiSelect"==o.format){var r=e.stdFormObj(t,o,i);return r.key=i.path,r.type="obibaUiSelect",i.lookup[l.stringify(i.path)]=r,r}};e.defaults.array.unshift(i),t.defineAddOn("bootstrapDecorator","obibaUiSelect","src/templates/sf-obiba-ui-select.html",o.stdBuilders)}]).controller("sfObibaUiSelectController",["$scope",function(e){e.$watch("ngModel.$modelValue",function(){e.ngModel.$validate?(e.ngModel.$validate(),e.ngModel.$invalid&&(e.ngModel.$dirty=!0,e.ngModel.$pristine=!1)):e.ngModel.$setViewValue(ngModel.$viewValue)},!0),e.$watch("form",function(){e.form&&(e.form.disableErrorState=e.form.hasOwnProperty("readonly")&&e.form.readonly)})}]);